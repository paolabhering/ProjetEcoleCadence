

{{> header}} 

{{#if filters}}
    <div class="container-confirmation" id="filtersApplied">
        <h3>Filtre(s) appliqué(s) :</h3>
        <ul>
            {{#if filters.category}}
                <li><b>Catégorie : </b>{{filters.category}}</li>
            {{/if}}
            {{#if filters.quantityMin}}
                <li><b>Quantité minimum : </b>{{filters.quantityMin}}</li>
            {{/if}}
            {{#if filters.age_group}}
                <li><b>Catégorie d'âge : </b>{{filters.age_group}}</li>
            {{/if}}
            {{#if filters.filtreMot}}
                <li><b>Mot-clé : </b>{{filters.filtreMot}}</li>
            {{/if}}
            {{#if filters.color}}
                <li><b>Couleur(s) : </b>{{filters.color}}</li>
            {{/if}}
        </ul>
    </div>
{{/if}}

 <form action="/choixProf" method="post" id="preferenceCostume">
 <div class="grid-container">
    {{#each groupeCostume}}
        <div class="grid-item" data-costume-id="{{this.costume_id}}">
                <a href="/detailsCostume/{{this.costume_id}}">
                    <div class="image-container">
                        <img src="/static/img/{{this.image}}"  alt="{{this.titre}}" class="imageCatalogue">
                    </div>
                 </a>
                    <div class="image-options">
                        <img src="/static/img/plusBlanc.png" alt="plus" class="plusB">
                        <img src="/static/img/plusRose.png" alt="plus" class="plusR" hidden >
                        <img src="/static/img/coeurBlanc.png" alt="coeur" class="coeurB"> 
                        <img src="/static/img/coeurRose.png" alt="coeur" class="coeurR" hidden> 
                    </div>

                    <div class="info-container">
                        <h4>{{this.titre}}</h4>
                            Quantité : {{this.quantite_totale}}<br>
                            Localisation : {{#if this.localisation}}{{this.localisation}}{{else}}N/A{{/if}}
                    </div>
                    <div class="container-ajoutFavori" hidden>
                        <label for="groupes">Costume favori pour le groupe:</label>
                            <select name="groupes" class="select-group">
                                <option value="">Sélectionner</option>
                                    {{#each groupes}}
                                        <option value="{{this}}">{{this}}</option>
                                    {{/each}}
                            </select>
                    </div>
        </div>
    {{/each}}
</div>
</form>


 <script>
    const user_id = {{{userId}}};
    const likedCostumeIds = {{{json likedCostumeIds}}};
    const groupes = {{{json groupesUser}}};

                 
     //Envoyer une requête AJAX pour ajouter les groupes au favori

    fetch('/groupes')
        .then(response => response.json())
        .then(groupes => {
            console.log('Données des groupes récupérées:', groupes);
            // Mettre à jour le select avec les groupes récupérés
            const selectGroupes = document.querySelectorAll('.select-group');
            selectGroupes.forEach(select => {
                groupes.forEach(groupe => {
                const option = document.createElement('option');
                    option.value = groupe.groupe_id;
                    option.textContent = groupe.nom;
                    select.appendChild(option);
                });
            });
        })
        .catch(error => {
            console.error('Erreur lors de la récupération des groupes:', error);
        });

    document.querySelectorAll('.grid-item').forEach(item => {
    
        const costume_id = Number(item.getAttribute('data-costume-id'));
        
        item.addEventListener('mouseenter', () => {
            item.querySelector('.info-container').style.display = 'block';
        });
        item.addEventListener('mouseleave', () => {
            item.querySelector('.info-container').style.display = 'none';
        });

        const plusBlanc = item.querySelector('.plusB');
        const plusRose = item.querySelector('.plusR');
        const ajoutFavori = item.querySelector(".container-ajoutFavori");
        
        plusBlanc.addEventListener('click', () => {
            console.log('Plus blanc cliqué'); 
            plusBlanc.hidden = true;
            plusRose.hidden = false; 
            ajoutFavori.hidden = false;  
        });

        plusRose.addEventListener('click', () => {
            plusRose.hidden = true;
            plusBlanc.hidden = false;  
            ajoutFavori.hidden = true;    
        });

        const coeurBlanc = item.querySelector('.coeurB');
        const coeurRose = item.querySelector('.coeurR');
        
         // Vérifiez si le costume est aimé
        if (likedCostumeIds.includes(parseInt(costume_id))) {
            coeurBlanc.hidden = true;  
            coeurRose.hidden = false;   
        } else {
            coeurBlanc.hidden = false;  
            coeurRose.hidden = true;     
        }

        coeurBlanc.addEventListener('click', () => {
            coeurBlanc.hidden = true;
            coeurRose.hidden = false;    

            //Envoyer une requête AJAX pour ajouter le like
           

            fetch('/ajouterLike', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify({ user_id, costume_id }),
            })
            .then(response => response.json())
            .then(data => {
                console.log(data.message);
                likedCostumeIds.push(costume_id);
            })
            .catch((error) => {
                console.error('Erreur:', error);
            });
        });
        
        coeurRose.addEventListener('click', () => {
            coeurRose.hidden = true;
            coeurBlanc.hidden = false;     
       
        // envoyer une requête ajax pour enlever le like

            
            fetch('/enleverLike', {
                method: 'post',
                headers: {
                    'content-type': 'application/json',
                },
                body: JSON.stringify({ user_id, costume_id }),
            })
            .then(response => response.json())
            .then(data => {
                console.log(data.message);
                likedCostumeIds = likedCostumeIds.filter(id => id !== costume_id);
                console.log("bob2");
            })
            .catch((error) => {
                console.error('erreur:', error);
            });
        });

    const selectGroupe = item.querySelector('.select-group');
    selectGroupe.addEventListener('change',(event) => {
        const selectedGroupe = event.target.value;
         console.log(`Groupe sélectionné pour le costume ID ${costume_id}: ${selectedGroupe}`);

        fetch('/ajouterFavori', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify({ user_id, costume_id, group_id: selectedGroupe }),
            })
            .then(response => response.json())
            .then(data => {
                console.log(data.message);
            })
            .catch((error) => {
                console.error('Erreur:', error);
            });
    })
    });
    
 </script>